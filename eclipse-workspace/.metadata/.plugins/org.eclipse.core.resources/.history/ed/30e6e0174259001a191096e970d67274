package D8Threads.D8PlaceOrder;

class PlaceOrder implements Runnable
{
	static int qt = 10;
	@Override
	public void run() 
	{
		try {
			//Thread.sleep(1000);
			orderPlace(6);
		} catch (InterruptedException e) 
		{
			e.printStackTrace();
		}
	}
	
	public void orderPlace(int q) throws InterruptedException
	{
		synchronized (this) 
		{
			if(q<=qt)
			{
				//Thread.sleep(10);
				System.out.println("Order Succesfull You purchased "+q+" items");
				qt=qt-q;
			}
			else
			{
				System.out.println("You can only order "+qt+ " items, not more than "+qt);
			}
		}
	}
	
}

public class Order 
{
	public static void main(String[] args) throws InterruptedException 
	{
		Thread t1 =new Thread(new PlaceOrder());
		Thread t2 =new Thread(new PlaceOrder());
		
		t1.start();
		//t1.join();
		t2.start();
	}
}
